{"version":3,"file":"set.cjs","sources":["../../src/set.ts"],"sourcesContent":["import {\n  BaseSerializerOptions,\n  ExpectedFixedSizeSerializerError,\n  mergeBytes,\n  Serializer,\n} from '@metaplex-foundation/umi-serializers-core';\nimport { u32 } from '@metaplex-foundation/umi-serializers-numbers';\nimport { ArrayLikeSerializerSize } from './arrayLikeSerializerSize';\nimport {\n  getResolvedSize,\n  getSizeDescription,\n  getSizeFromChildren,\n  getSizePrefix,\n} from './utils';\nimport { InvalidNumberOfItemsError } from './errors';\n\n/**\n * Defines the options for `Set` serializers.\n * @category Serializers\n */\nexport type SetSerializerOptions = BaseSerializerOptions & {\n  /**\n   * The size of the set.\n   * @defaultValue `u32()`\n   */\n  size?: ArrayLikeSerializerSize;\n};\n\n/**\n * Creates a serializer for a set.\n *\n * @param item - The serializer to use for the set's items.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function set<T, U extends T = T>(\n  item: Serializer<T, U>,\n  options: SetSerializerOptions = {}\n): Serializer<Set<T>, Set<U>> {\n  const size = options.size ?? u32();\n  if (size === 'remainder' && item.fixedSize === null) {\n    throw new ExpectedFixedSizeSerializerError(\n      'Serializers of \"remainder\" size must have fixed-size items.'\n    );\n  }\n  return {\n    description:\n      options.description ??\n      `set(${item.description}; ${getSizeDescription(size)})`,\n    fixedSize: getSizeFromChildren(size, [item.fixedSize]),\n    maxSize: getSizeFromChildren(size, [item.maxSize]),\n    serialize: (set: Set<T>) => {\n      if (typeof size === 'number' && set.size !== size) {\n        throw new InvalidNumberOfItemsError('set', size, set.size);\n      }\n      const itemBytes = Array.from(set, (value) => item.serialize(value));\n      return mergeBytes([getSizePrefix(size, set.size), ...itemBytes]);\n    },\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      const set: Set<U> = new Set();\n      if (typeof size === 'object' && bytes.slice(offset).length === 0) {\n        return [set, offset];\n      }\n      const [resolvedSize, newOffset] = getResolvedSize(\n        size,\n        [item.fixedSize],\n        bytes,\n        offset\n      );\n      offset = newOffset;\n      for (let i = 0; i < resolvedSize; i += 1) {\n        const [value, newOffset] = item.deserialize(bytes, offset);\n        offset = newOffset;\n        set.add(value);\n      }\n      return [set, offset];\n    },\n  };\n}\n"],"names":["set","item","options","size","u32","fixedSize","ExpectedFixedSizeSerializerError","description","getSizeDescription","getSizeFromChildren","maxSize","serialize","InvalidNumberOfItemsError","itemBytes","Array","from","value","mergeBytes","getSizePrefix","deserialize","bytes","offset","Set","slice","length","resolvedSize","newOffset","getResolvedSize","i","add"],"mappings":";;;;;;;;;AAgBA;AACA;AACA;AACA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,GAAG,CACjBC,IAAsB,EACtBC,OAA6B,GAAG,EAAE,EACN;AAC5B,EAAA,MAAMC,IAAI,GAAGD,OAAO,CAACC,IAAI,IAAIC,yBAAG,EAAE,CAAA;EAClC,IAAID,IAAI,KAAK,WAAW,IAAIF,IAAI,CAACI,SAAS,KAAK,IAAI,EAAE;AACnD,IAAA,MAAM,IAAIC,mDAAgC,CACxC,6DAA6D,CAC9D,CAAA;AACH,GAAA;EACA,OAAO;AACLC,IAAAA,WAAW,EACTL,OAAO,CAACK,WAAW,IAClB,CAAMN,IAAAA,EAAAA,IAAI,CAACM,WAAY,CAAIC,EAAAA,EAAAA,wBAAkB,CAACL,IAAI,CAAE,CAAE,CAAA,CAAA;IACzDE,SAAS,EAAEI,yBAAmB,CAACN,IAAI,EAAE,CAACF,IAAI,CAACI,SAAS,CAAC,CAAC;IACtDK,OAAO,EAAED,yBAAmB,CAACN,IAAI,EAAE,CAACF,IAAI,CAACS,OAAO,CAAC,CAAC;IAClDC,SAAS,EAAGX,GAAW,IAAK;MAC1B,IAAI,OAAOG,IAAI,KAAK,QAAQ,IAAIH,GAAG,CAACG,IAAI,KAAKA,IAAI,EAAE;QACjD,MAAM,IAAIS,gCAAyB,CAAC,KAAK,EAAET,IAAI,EAAEH,GAAG,CAACG,IAAI,CAAC,CAAA;AAC5D,OAAA;AACA,MAAA,MAAMU,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACf,GAAG,EAAGgB,KAAK,IAAKf,IAAI,CAACU,SAAS,CAACK,KAAK,CAAC,CAAC,CAAA;AACnE,MAAA,OAAOC,6BAAU,CAAC,CAACC,mBAAa,CAACf,IAAI,EAAEH,GAAG,CAACG,IAAI,CAAC,EAAE,GAAGU,SAAS,CAAC,CAAC,CAAA;KACjE;AACDM,IAAAA,WAAW,EAAE,CAACC,KAAiB,EAAEC,MAAM,GAAG,CAAC,KAAK;AAC9C,MAAA,MAAMrB,GAAW,GAAG,IAAIsB,GAAG,EAAE,CAAA;AAC7B,MAAA,IAAI,OAAOnB,IAAI,KAAK,QAAQ,IAAIiB,KAAK,CAACG,KAAK,CAACF,MAAM,CAAC,CAACG,MAAM,KAAK,CAAC,EAAE;AAChE,QAAA,OAAO,CAACxB,GAAG,EAAEqB,MAAM,CAAC,CAAA;AACtB,OAAA;AACA,MAAA,MAAM,CAACI,YAAY,EAAEC,SAAS,CAAC,GAAGC,qBAAe,CAC/CxB,IAAI,EACJ,CAACF,IAAI,CAACI,SAAS,CAAC,EAChBe,KAAK,EACLC,MAAM,CACP,CAAA;AACDA,MAAAA,MAAM,GAAGK,SAAS,CAAA;AAClB,MAAA,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,YAAY,EAAEG,CAAC,IAAI,CAAC,EAAE;AACxC,QAAA,MAAM,CAACZ,KAAK,EAAEU,SAAS,CAAC,GAAGzB,IAAI,CAACkB,WAAW,CAACC,KAAK,EAAEC,MAAM,CAAC,CAAA;AAC1DA,QAAAA,MAAM,GAAGK,SAAS,CAAA;AAClB1B,QAAAA,GAAG,CAAC6B,GAAG,CAACb,KAAK,CAAC,CAAA;AAChB,OAAA;AACA,MAAA,OAAO,CAAChB,GAAG,EAAEqB,MAAM,CAAC,CAAA;AACtB,KAAA;GACD,CAAA;AACH;;;;"}
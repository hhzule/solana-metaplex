{"version":3,"file":"utils.cjs","sources":["../../src/utils.ts"],"sourcesContent":["import { ExpectedFixedSizeSerializerError } from '@metaplex-foundation/umi-serializers-core';\nimport { ArrayLikeSerializerSize } from './arrayLikeSerializerSize';\nimport {\n  InvalidArrayLikeRemainderSizeError,\n  UnrecognizedArrayLikeSerializerSizeError,\n} from './errors';\nimport { sumSerializerSizes } from './sumSerializerSizes';\n\nexport function getResolvedSize(\n  size: ArrayLikeSerializerSize,\n  childrenSizes: (number | null)[],\n  bytes: Uint8Array,\n  offset: number\n): [number | bigint, number] {\n  if (typeof size === 'number') {\n    return [size, offset];\n  }\n\n  if (typeof size === 'object') {\n    return size.deserialize(bytes, offset);\n  }\n\n  if (size === 'remainder') {\n    const childrenSize = sumSerializerSizes(childrenSizes);\n    if (childrenSize === null) {\n      throw new ExpectedFixedSizeSerializerError(\n        'Serializers of \"remainder\" size must have fixed-size items.'\n      );\n    }\n    const remainder = bytes.slice(offset).length;\n    if (remainder % childrenSize !== 0) {\n      throw new InvalidArrayLikeRemainderSizeError(remainder, childrenSize);\n    }\n    return [remainder / childrenSize, offset];\n  }\n\n  throw new UnrecognizedArrayLikeSerializerSizeError(size);\n}\n\nexport function getSizeDescription(\n  size: ArrayLikeSerializerSize | string\n): string {\n  return typeof size === 'object' ? size.description : `${size}`;\n}\n\nexport function getSizeFromChildren(\n  size: ArrayLikeSerializerSize,\n  childrenSizes: (number | null)[]\n): number | null {\n  if (typeof size !== 'number') return null;\n  if (size === 0) return 0;\n  const childrenSize = sumSerializerSizes(childrenSizes);\n  return childrenSize === null ? null : childrenSize * size;\n}\n\nexport function getSizePrefix(\n  size: ArrayLikeSerializerSize,\n  realSize: number\n): Uint8Array {\n  return typeof size === 'object' ? size.serialize(realSize) : new Uint8Array();\n}\n"],"names":["getResolvedSize","size","childrenSizes","bytes","offset","deserialize","childrenSize","sumSerializerSizes","ExpectedFixedSizeSerializerError","remainder","slice","length","InvalidArrayLikeRemainderSizeError","UnrecognizedArrayLikeSerializerSizeError","getSizeDescription","description","getSizeFromChildren","getSizePrefix","realSize","serialize","Uint8Array"],"mappings":";;;;;;;;AAQO,SAASA,eAAe,CAC7BC,IAA6B,EAC7BC,aAAgC,EAChCC,KAAiB,EACjBC,MAAc,EACa;AAC3B,EAAA,IAAI,OAAOH,IAAI,KAAK,QAAQ,EAAE;AAC5B,IAAA,OAAO,CAACA,IAAI,EAAEG,MAAM,CAAC,CAAA;AACvB,GAAA;AAEA,EAAA,IAAI,OAAOH,IAAI,KAAK,QAAQ,EAAE;AAC5B,IAAA,OAAOA,IAAI,CAACI,WAAW,CAACF,KAAK,EAAEC,MAAM,CAAC,CAAA;AACxC,GAAA;EAEA,IAAIH,IAAI,KAAK,WAAW,EAAE;AACxB,IAAA,MAAMK,YAAY,GAAGC,qCAAkB,CAACL,aAAa,CAAC,CAAA;IACtD,IAAII,YAAY,KAAK,IAAI,EAAE;AACzB,MAAA,MAAM,IAAIE,mDAAgC,CACxC,6DAA6D,CAC9D,CAAA;AACH,KAAA;IACA,MAAMC,SAAS,GAAGN,KAAK,CAACO,KAAK,CAACN,MAAM,CAAC,CAACO,MAAM,CAAA;AAC5C,IAAA,IAAIF,SAAS,GAAGH,YAAY,KAAK,CAAC,EAAE;AAClC,MAAA,MAAM,IAAIM,yCAAkC,CAACH,SAAS,EAAEH,YAAY,CAAC,CAAA;AACvE,KAAA;AACA,IAAA,OAAO,CAACG,SAAS,GAAGH,YAAY,EAAEF,MAAM,CAAC,CAAA;AAC3C,GAAA;AAEA,EAAA,MAAM,IAAIS,+CAAwC,CAACZ,IAAI,CAAC,CAAA;AAC1D,CAAA;AAEO,SAASa,kBAAkB,CAChCb,IAAsC,EAC9B;EACR,OAAO,OAAOA,IAAI,KAAK,QAAQ,GAAGA,IAAI,CAACc,WAAW,GAAI,CAAEd,EAAAA,IAAK,CAAC,CAAA,CAAA;AAChE,CAAA;AAEO,SAASe,mBAAmB,CACjCf,IAA6B,EAC7BC,aAAgC,EACjB;AACf,EAAA,IAAI,OAAOD,IAAI,KAAK,QAAQ,EAAE,OAAO,IAAI,CAAA;AACzC,EAAA,IAAIA,IAAI,KAAK,CAAC,EAAE,OAAO,CAAC,CAAA;AACxB,EAAA,MAAMK,YAAY,GAAGC,qCAAkB,CAACL,aAAa,CAAC,CAAA;EACtD,OAAOI,YAAY,KAAK,IAAI,GAAG,IAAI,GAAGA,YAAY,GAAGL,IAAI,CAAA;AAC3D,CAAA;AAEO,SAASgB,aAAa,CAC3BhB,IAA6B,EAC7BiB,QAAgB,EACJ;AACZ,EAAA,OAAO,OAAOjB,IAAI,KAAK,QAAQ,GAAGA,IAAI,CAACkB,SAAS,CAACD,QAAQ,CAAC,GAAG,IAAIE,UAAU,EAAE,CAAA;AAC/E;;;;;;;"}